class("GetBatchShipCommand", pm.SimpleCommand).execute = function (slot0, slot1)
	slot2 = getProxy(BuildShipProxy)
	slot3 = slot2:getData()
	slot6 = slot2:getNeedFinishCount()
	slot8 = getProxy(PlayerProxy).getData(slot7)
	slot9 = {}
	slot11 = table.getCount(getProxy(BayProxy):getData())

	if getProxy(BagProxy).getItemById(slot4, ITEM_ID_EQUIP_QUICK_FINISH) and slot5.count > 0 then
		slot6 = math.min(slot6, slot5.count)
		slot12 = 0

		for slot16, slot17 in ipairs(slot3) do
			if slot17.state ~= BuildShip.FINISH then
				slot12 = slot12 + 1

				table.insert(slot9, function (slot0)
					slot0:sendNotification(GAME.BUILD_SHIP_IMMEDIATELY, {
						isBatch = true,
						pos = slot0.sendNotification,
						callBack = slot0
					})
				end)
			end

			if slot6 == slot12 then
				break
			end
		end
	end

	seriesAsync(slot9, function ()
		if slot0:getFinishCount() ~= table.getCount(table.getCount) then
			pg.TipsMgr:GetInstance():ShowTips(i18n("backyard_backyardShipInfoLayer_error_noQuickItem"))
		end

		slot1 = {}
		slot2 = false
		slot3 = {}

		for slot7 = 1, slot0, 1 do
			if slot2.ship_bag_max <= slot3 then
				break
			end

			table.insert(slot1, function (slot0)
				slot3 = slot2:getFinishedIndex()
				slot4 = slot2:getSkipBatchBuildFlag()

				if slot0 - slot1 > 0 and not slot4 then
					slot3 = true
					slot1 = true
				end

				slot5:sendNotification(GAME.GET_SHIP, {
					isBatch = true,
					pos = slot3,
					callBack = function (slot0)
						slot0[#slot0 + 1] = slot0

						slot0()
					end,
					canSkipBatch = slot1,
					isSkip = slot4
				})
			end)

			slot3 = slot3 + 1
		end

		seriesAsync(slot1, function ()
			if slot0 then
				slot1:setSkipBatchBuildFlag(false)

				slot0 = {}

				for slot4, slot5 in ipairs(false) do
					slot0[#slot0 + 1] = {
						type = DROP_TYPE_SHIP,
						id = slot5.configId,
						count = 1,
						virgin = slot5.virgin
					}
				end

				slot3:sendNotification(GAME.SKIP_BATCH_DONE, slot0)
			end

			if slot1:getFinishCount() > 0 then
				NoPosMsgBox(i18n("switch_to_shop_tip_noDockyard"), openDockyardClear, gotoChargeScene)
			end
		end)
	end)
end

return class("GetBatchShipCommand", pm.SimpleCommand)

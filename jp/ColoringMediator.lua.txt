slot0 = class("ColoringMediator", import("..base.ContextMediator"))
slot0.EVENT_GO_SCENE = "event go scene"
slot0.EVENT_COLORING_CELL = "event coloring cell"
slot0.EVENT_COLORING_CLEAR = "event coloring clear"

slot0.register = function (slot0)
	slot0:bind(slot0.EVENT_GO_SCENE, function (slot0, slot1, slot2)
		slot0:sendNotification(GAME.GO_SCENE, slot1, slot2)
	end)
	slot0:bind(slot0.EVENT_COLORING_CELL, function (slot0, slot1)
		slot0:sendNotification(GAME.COLORING_CELL, slot1)
	end)
	slot0:bind(slot0.EVENT_COLORING_CLEAR, function (slot0, slot1)
		slot0:sendNotification(GAME.COLORING_CLEAR, slot1)
	end)
	slot0.viewComponent:setActivity(slot2)

	slot3 = getProxy(ColoringProxy)

	slot0.viewComponent:setColorItems(slot3:getColorItems())
	slot0.viewComponent:setColorGroups(slot3:getColorGroups())
end

slot0.listNotificationInterests = function (slot0)
	return {
		GAME.COLORING_CELL_DONE,
		GAME.COLORING_CLEAR_DONE
	}
end

slot0.handleNotification = function (slot0, slot1)
	slot3 = slot1:getBody()

	if slot1:getName() == GAME.COLORING_CELL_DONE then
		_.each(slot3.cells, function (slot0)
			slot0.viewComponent:updateCell(slot0.row, slot0.column)
		end)
		slot0.viewComponent:updateSelectedColoring()

		if slot3.stateChange then
			slot0.viewComponent:updatePage()
		end
	elseif slot2 == GAME.COLORING_CLEAR_DONE then
		slot0.viewComponent:updateSelectedColoring()
	end
end

return slot0
